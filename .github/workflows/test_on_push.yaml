name: CI
on:
  push:
    branches:
      - master
jobs:
  run_tests:
    runs-on: [ubuntu-latest]
    services:
      postgres_main:
        image: postgres:13
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v1
        with:
          python-version: 3.9
          architecture: 'x64'
      - name: Install requirements
        run: pip install -r requirements.txt
      - name: Tests
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          POSTGRES_NAME: ${{ secrets.DB_NAME }}
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_HOST: ${{ secrets.DB_HOST }}
          POSTGRES_PORT: ${{ secrets.DB_PORT }}
          DEBUG_MODE: False
        run: python manage.py test
  build_and_pub:
    needs: [run_tests]
    runs-on: [ubuntu-latest]
    env:
      LOGIN: ${{ secrets.DOCKER_LOGIN }}
      NAME: ${{ secrets.DOCKER_NAME }}
    steps:
      - name: Login to docker
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
      - uses: actions/checkout@master
      - name: Build image
        run: docker build -t $LOGIN/$NAME:${GITHUB_REF:11} -f Dockerfile .
      - name: Push image to docker
        run: docker push $LOGIN/$NAME:${GITHUB_REF:11}

